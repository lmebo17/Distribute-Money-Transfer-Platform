server:
  servlet:
    context-path: /transfer-repository
  port: 8083

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{trace_id:-},%X{span_id:-}]"
spring:
  profiles:
    active: docker
  main:
    allow-bean-definition-overriding: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  application:
    name: transfer-repository
  flyway:
    enabled: true
    locations:
      - classpath:db/migration
    baseline-on-migrate: true
    default-schema: dmtp_schema
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      auto-offset-reset: earliest
      group-id: transfer-repository-group
    transfer-status-consumer:
      group-id: transfer-status-topic-group
  graphql:
    graphiql:
      enabled: true
  boot:
    admin:
      client:
        enabled: true
        instance:
          name: ${spring.application.name}:${server.port}
        url: http://spring-boot-admin:8088/spring-boot-admin
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres:5432/dmtp
    username: postgres
    password: pass
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

openapi:
  servers: http://localhost:8085/transfer-repository


