server:
  servlet:
    context-path: /fi-integration
  port: 8081

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{trace_id:-},%X{span_id:-}]"

mts:
  moneygram:
    currency:
      gel:
        account-number: GEL1MNG4416993472
      usd:
        account-number: USD1MNG5429134065
      eur:
        account-number: EUR1MNG9195762794
  western-union:
    currency:
      gel:
        account-number: GEL1WST5963281047
      usd:
        account-number: USD1WST1834670925
      eur:
        account-number: EUR1WST8372614950

spring:
  profiles:
    active: docker
  main:
    allow-bean-definition-overriding: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  application:
    name: fi-integration
  cache:
    redis:
      time-to-live: 72h
    type: redis

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      auto-offset-reset: earliest
      group-id: fi-integration-group

  boot:
    admin:
      client:
        enabled: true
        instance:
          name: ${spring.application.name}:${server.port}
        url: http://spring-boot-admin:8088/spring-boot-admin

  data:
    redis:
      host: redis
      port: 6379

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

bank:
  service:
    url: http://bank-service:8082/bank-service
    username: admin
    password: admin
    bank-transactions-retry-count: 3

scheduler:
  config:
    schedule-reprocessing-delay: 1000


openapi:
  servers: http://localhost:8085/fi-integration
