server:
  port: 8888
spring:
  application:
    name: config-server
  profiles:
    active: native
  cloud:
    config:
      server:
        native:
          search-locations:
            - classpath:/config-repo/env/{application}/
            - classpath:/config-repo/env/{application}/{profile}/
  boot:
    admin:
      client:
        enabled: true
        instance:
          name: ${spring.application.name}:${server.port}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

---
spring:
  config:
    activate:
      on-profile: docker
  cloud:
    config:
      server:
        native:
          search-locations:
            - classpath:/config-repo/env/{application}/
            - classpath:/config-repo/env/{application}/{profile}/
  boot:
    admin:
      client:
        url: http://spring-boot-admin:8088/spring-boot-admin

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

---
spring:
  config:
    activate:
      on-profile: local
  boot:
    admin:
      client:
        url: http://localhost:8088/spring-boot-admin
  cloud:
    config:
      server:
        native:
          search-locations:
            - classpath:/config-repo/env/{application}/
            - classpath:/config-repo/env/{application}/{profile}/

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always